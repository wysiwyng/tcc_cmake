name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Windows dependencies
      if: matrix.os == 'windows-latest'
      run: choco install make

    - name: gcc info
      shell: bash
      run: |
        which gcc
        gcc --version

    - uses: actions/checkout@v2

    - name: Create build dir
      run: cmake -E make_directory "${{github.workspace}}/build"

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/build
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake .. -DCMAKE_GENERATOR="Unix Makefiles" -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX=../install

    - name: Build
      shell: bash
      working-directory: ${{github.workspace}}/build
      # Build your program with the given configuration
      run: VERBOSE=1 cmake --build . --config ${{env.BUILD_TYPE}}

    - name: Install
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake --build . --config ${{env.BUILD_TYPE}} --target install

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.3.1
      with:
        name: install
        path: ${{github.workspace}}/install
